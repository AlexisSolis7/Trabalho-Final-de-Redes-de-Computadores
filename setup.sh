#!/bin/bash

#  Script de Instala√ß√£o Autom√°tica - Controlador SDN Dijkstra
# Autor: Equipe de Desenvolvimento
# Vers√£o: 1.0

set -e  # Parar script em caso de erro

echo " === INSTALA√á√ÉO DO CONTROLADOR SDN DIJKSTRA === "
echo ""

# Verificar se est√° rodando como usu√°rio normal (n√£o root)
if [[ $EUID -eq 0 ]]; then
   echo "‚ùå Este script n√£o deve ser executado como root"
   echo " Execute como usu√°rio normal: ./setup.sh"
   exit 1
fi

# Verificar distribui√ß√£o Linux
if ! command -v apt &> /dev/null; then
    echo "‚ùå Este script requer Ubuntu/Debian (comando apt)"
    exit 1
fi

echo " Verificando pr√©-requisitos..."

# Verificar Python 3.8+
python_version=$(python3 -c 'import sys; print(".".join(map(str, sys.version_info[:2])))')
required_version="3.8"

if ! python3 -c "import sys; sys.exit(0 if sys.version_info >= (3, 8) else 1)"; then
    echo "‚ùå Python 3.8+ √© necess√°rio. Vers√£o atual: $python_version"
    exit 1
fi

echo "‚úÖ Python $python_version encontrado"

# Atualizar sistema
echo " Atualizando sistema..."
sudo apt update

# Instalar depend√™ncias do sistema
echo " Instalando depend√™ncias do sistema..."
sudo apt install -y \
    python3-pip \
    python3-dev \
    python3-venv \
    build-essential \
    git \
    curl \
    wget

# Verificar se Mininet j√° est√° instalado
if ! command -v mn &> /dev/null; then
    echo " Instalando Mininet..."
    sudo apt install -y mininet
    
    # Verificar instala√ß√£o do Open vSwitch
    if ! command -v ovs-vsctl &> /dev/null; then
        echo "üîå Instalando Open vSwitch..."
        sudo apt install -y openvswitch-switch
    fi
else
    echo "‚úÖ Mininet j√° instalado"
fi

# Criar ambiente virtual se n√£o existir
if [ ! -d "ryu_env" ]; then
    echo "üêç Criando ambiente virtual Python..."
    python3 -m venv ryu_env
else
    echo "‚úÖ Ambiente virtual j√° existe"
fi

# Ativar ambiente virtual
echo "‚ö° Ativando ambiente virtual..."
source ryu_env/bin/activate

# Atualizar pip
echo "üìà Atualizando pip..."
pip install --upgrade pip

# Instalar depend√™ncias Python
echo " Instalando depend√™ncias Python..."
if [ -f "requirements.txt" ]; then
    pip install -r requirements.txt
else
    echo "‚ùå Arquivo requirements.txt n√£o encontrado!"
    exit 1
fi

# Verificar instala√ß√£o do Ryu
echo " Testando instala√ß√£o do Ryu..."
if python -c "import ryu" 2>/dev/null; then
    echo "‚úÖ Ryu instalado com sucesso"
else
    echo "‚ùå Erro na instala√ß√£o do Ryu"
    exit 1
fi

# Verificar instala√ß√£o do NetworkX
echo "üï∏Ô∏è Testando NetworkX..."
if python -c "import networkx" 2>/dev/null; then
    echo "‚úÖ NetworkX instalado com sucesso"
else
    echo "‚ùå Erro na instala√ß√£o do NetworkX"
    exit 1
fi

# Criar diret√≥rios necess√°rios
echo " Criando estrutura de diret√≥rios..."
mkdir -p logs tests/results

# Configurar permiss√µes para Mininet
echo " Configurando permiss√µes..."
sudo usermod -a -G sudo $USER

# Testar conectividade b√°sica do Mininet
echo "üß™ Testando Mininet..."
sudo mn --test pingall --topo single,2 > /dev/null 2>&1
if [ $? -eq 0 ]; then
    echo "‚úÖ Mininet funcionando corretamente"
else
    echo "‚ö†Ô∏è Aviso: Teste do Mininet falhou (pode funcionar mesmo assim)"
fi

echo ""
echo " === INSTALA√á√ÉO CONCLU√çDA COM SUCESSO! === "
echo ""
echo "üöÄ Para executar o projeto:"
echo "   1. source ryu_env/bin/activate"
echo "   2. ryu-manager dijkstra_controller.py"
echo "   3. Em outro terminal: sudo python3 dijkstra_topologia.py"
echo ""
echo " Para mais informa√ß√µes: cat README.md"
echo " Problemas? Verifique os logs em: logs/"
echo ""
echo " Boa sorte com seu projeto SDN! "
